#!/usr/bin/env groovy

pipeline {
  agent { label "mesos" }
  triggers {
    cron("0 * * * *")
  }

  stages {
    stage("Maintenance") {
      parallel {

        stage("Update dev-image") {
          environment {
            DOCKER = credentials('docker-hub-credentials')
          }
          steps {
            sh '''
              docker login -u ${DOCKER_USR} -p ${DOCKER_PSW}
              docker pull mesosphere/docs-dev:latest
              docker build --cache-from mesosphere/docs-dev:latest -f docker/Dockerfile -t mesosphere/docs-dev:latest .
              docker push mesosphere/docs-dev:latest
            '''
          }
        }

        stage("Clean up S3-Buckets") {
          environment {
            AWS_DEFAULT_REGION = "us-west-2"
          }
          steps {
            withCredentials([
                [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: "s3-development"],
                usernamePassword(credentialsId: "a7ac7f84-64ea-4483-8e66-bb204484e58f", passwordVariable: "GH_PASSWORD", usernameVariable: "GH_USER")
            ]) {
              sh '''#!/bin/bash
                set -euxo pipefail
                apk add jq --no-cache
                buckets=$(docker run -e AWS_ACCESS_KEY_ID -e AWS_DEFAULT_REGION  -e AWS_SECRET_ACCESS_KEY -e AWS_SESSION_TOKEN amazon/aws-cli s3api list-buckets | jq '.Buckets | .[].Name' -r | grep "docs-d2iq-com-pr-")
                echo $buckets
                open_prs=$(docker run curlimages/curl:7.75.0 "https://api.github.com/repos/mesosphere/dcos-docs-site/pulls?state=open" | jq '.[].number')
                echo $open_prs
                for bucket in $buckets; do
                  found=false
                  for pr in $open_prs; do
                    if [[ $bucket == *"$pr"* ]]; then
                      found=true
                      break
                    fi
                  done
                  if [ "$found" = false ] ; then
                    echo "removing: $bucket"
                    docker run -e AWS_ACCESS_KEY_ID -e AWS_DEFAULT_REGION  -e AWS_SECRET_ACCESS_KEY -e AWS_SESSION_TOKEN amazon/aws-cli s3 rb s3://$bucket --force
                  fi
                done
              '''
            }
          }
        }
      }
    }
  }
}

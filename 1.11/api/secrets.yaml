swagger: '2.0'
info:
  version: 1.0.0
  title: ' DC/OS Secrets API'
schemes:
  - https
basePath: '/secrets/v1'
tags:
  - name: backend
    description: Secret stores related API endpoints
  - name: secrets
    description: Secrets manipulation
paths:
  /ping:
    get:
      tags:
        - backend
      summary: Return 'pong' if secrets service is up.
      description: Return 'pong' if secrets service is up.
      responses:
        200:
          description: Response body contains pong response.
        404:
          description: Store not found.
        503:
          description: Service Unavailable.

  /ping/backends/{backend}:
    get:
      tags:
        - backend
      summary: Return 'pong' if backend service is up.
      description: Return 'pong' if backend service is up.
      parameters:
        - name: backend
          description: The backend store.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response body contains pong response.
        404:
          description: Store not found.
        503:
          description: Service Unavailable.

  /ping/backends/all:
    get:
      tags:
        - backend
      summary: Return 'pong' if all backend services are up.
      description: Return 'pong' if all backend services are up.
      responses:
        200:
          description: Response body contains pong response.
        404:
          description: No store found.
        503:
          description: Services Unavailable.

  /init/{store}:
    get:
      tags:
        - backend
      summary: Return the initialization status of a store.
      description: Return the initialization status of a store.
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend store from which to get the secret.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response body contains initialization response.
          schema:
            $ref: "#/definitions/InitResponse"
        403:
          description: Forbidden.
        404:
          description: Store not found.
    put:
      tags:
        - backend
      summary: Initializes a store.
      description: Initializes a store.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend to store the secret in.
          in: path
          required: true
          type: string
        - name: InitRequest object
          description: The initialization request.
          in: body
          required: true
          schema:
            $ref: "#/definitions/InitRequest"
      responses:
        200:
          description: Store initialized.
          schema:
            $ref: "#/definitions/InitResponse"
        403:
          description: Forbidden.
        404:
          description: Store not found.

  /seal-status/{store}:
    get:
      tags:
        - backend
      summary: Returns the seal status of the store.
      description: Returns the seal status of the store.
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend store from which to get the secret.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response body contains initialization response.
          schema:
            $ref: "#/definitions/SealStatus"
        403:
          description: Forbidden.
        404:
          description: Store not found.

  /unseal/{store}:
    put:
      tags:
        - backend
      summary: Sends a decrypted unseal key to progress the unsealing of the store.
      description: Sends a decrypted unseal key to progress the unsealing of the store.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend to store the secret in.
          in: path
          required: true
          type: string
        - name: UnsealRequest object
          description: The unseal request.
          in: body
          required: true
          schema:
            $ref: "#/definitions/UnsealRequest"
      responses:
        200:
          description: Unseal progressed.
          schema:
            $ref: "#/definitions/SealStatus"
        403:
          description: Forbidden.
        404:
          description: Store not found.

  /auto-unseal/{store}:
    put:
      tags:
        - backend
      summary: Sends an encrypted unseal key to progress the unsealing of the store.
      description: Sends an encrypted unseal key to progress the unsealing of the store. The key is provided by the init endpoint, it should be sent as is.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend to store the secret in.
          in: path
          required: true
          type: string
        - name: UnsealRequest object
          description: The unseal request.
          in: body
          required: true
          schema:
            $ref: "#/definitions/UnsealRequest"
      responses:
        200:
          description: Unseal progressed.
          schema:
            $ref: "#/definitions/SealStatus"
        403:
          description: Forbidden.
        404:
          description: Store not found.

  /seal/{store}:
    put:
      tags:
        - backend
      summary: Seals the store.
      description: Seals the store.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend to store the secret in.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Seal processed.
        403:
          description: Forbidden.
        404:
          description: Store not found.
  /secret/{store}/{path/to/secret}:
    get:
      tags:
        - secrets
      summary: Read or list a secret from the store by its path.
      description: Read or list a secret from the store by its path.
      produces:
        - application/json
      parameters:
        - name: store
          description: The backend store from which to get the secret.
          in: path
          required: true
          type: string
        - name: list
          in: query
          description: >
            If set to true, list only secret keys.
          type: string
        - name: path/to/secret
          description: The path to store the secret in.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response body contains secret authorized content.
          schema:
            $ref: "#/definitions/Secret"
        403:
          description: Forbidden.
        404:
          description: Secret not found.
    put:
      tags:
        - secrets
      summary: Create a secret in the store at the path.
      description: Create a secret in the store at the path.
      consumes:
        - application/json
      parameters:
        - name: store
          description: The backend to store the secret in.
          in: path
          required: true
          type: string
        - name: path/to/secret
          description: The path to store the secret in.
          in: path
          required: true
          type: string
        - name: Secret object
          description: Secret value.
          in: body
          required: true
          schema:
            $ref: "#/definitions/Secret"
      responses:
        201:
          description: Secret created.
        403:
          description: Forbidden.
        409:
          description: Secret already exists.
    patch:
      tags:
        - secrets
      summary: Update secret.
      description: Update existing secret in the specified store.
      consumes:
        - application/json
      parameters:
        - name: store
          description: The backend to store the secret in.
          in: path
          required: true
          type: string
        - name: path/to/secret
          description: The path for the secret to update.
          in: path
          required: true
          type: string
        - name: Secret object
          description: Secret value.
          in: body
          required: true
          schema:
            $ref: "#/definitions/Secret"
      responses:
        204:
          description: Secret updated.
        403:
          description: Forbidden.
        404:
          description: Secret not found.
    delete:
      tags:
        - secrets
      summary: Delete a secret.
      description: Delete a secret.
      parameters:
        - name: store
          description: The backend to delete the secret from.
          in: path
          required: true
          type: string
        - name: path/to/secret
          description: The path to the secret to delete.
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success.
        403:
          description: Forbidden.
        404:
          description: Secret not found.

  /revoke/{store}/{path/to/secret}:
    put:
      tags:
        - secrets
      summary: Revoke a secret.
      description: Revoke a secret immediately.
      parameters:
        - name: store
          description: The backend to revoke the secret from.
          in: path
          required: true
          type: string
        - name: path/to/secret
          description: The path to the secret to revoke.
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success.
        403:
          description: Forbidden.

  /renew/{store}/{path/to/secret}:
    put:
      tags:
        - secrets
      summary: Renew the lease for a secret.
      description: Renew a secret, requesting to extend the lease.
      consumes:
        - application/json
      parameters:
        - name: store
          description: The backend to renew the secret for.
          in: path
          required: true
          type: string
        - name: path/to/secret
          description: The path to the secret to renew.
          in: path
          required: true
          type: string
        - name: Duration object
          description: A requested amount of time in seconds to extend the lease.
          in: body
          required: true
          schema:
            $ref: "#/definitions/Duration"
      responses:
        204:
          description: Success.
        403:
          description: Forbidden.

  /store:
    get:
      tags:
        - backend
      summary: List all secret stores.
      description: List all secret stores.
      produces:
        - application/json
      responses:
        200:
          description: Success.
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                    $ref: "#/definitions/Backend"
        403:
          description: Forbidden.

  /store/{backend}:
    get:
      tags:
        - backend
      summary: Retrieve information for the named backend.
      description: Retrieve information for the named backend.
      produces:
        - application/json
      parameters:
        - name: backend
          description: Backend name.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response body contains the backend.
          schema:
            $ref: "#/definitions/Backend"
        403:
          description: Forbidden.
        404:
          description: Backend not found.
    put:
      tags:
        - backend
      summary: Create and initialize a secret store backend.
      description: Create and initialize a secret store backend.
      parameters:
        - name: backend
          description: Name for the store backend.
          in: path
          required: true
          type: string
        - name: Backend object
          description: Driver to use for the backend store. ex. vault
          in: body
          required: true
          schema:
            $ref: "#/definitions/Backend"
      responses:
        201:
          description: Secret store created.
        403:
          description: Forbidden.
        404:
          description: Backend type/driver not found.
        409:
          description: Secret store already exists with this backend.
    delete:
      tags:
        - backend
      summary: Delete a secret store.
      description: Delete a secret store.
      parameters:
        - name: backend
          description: Backend to delete.
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success.
        403:
          description: Forbidden.
        404:
          description: Backend not found.



definitions:

  InitRequest:
    type: object
    properties:
      shares:
        type: integer
      threshold:
        type: integer
      pgp_keys:
        type: array
        items:
          type: string
    additionalProperties: false

  InitResponse:
    type: object
    properties:
      initialized:
        type: boolean
      keys:
        type: array
        items:
          type: string
      pgp_fingerprints:
        type: array
        items:
          type: string
      recovery_keys:
        type: array
        items:
          type: string
      root_token:
        type: string
    additionalProperties: false

  SealStatus:
    type: object
    properties:
      sealed:
        type: boolean
      shares:
        type: integer
      threshold:
        type: integer
      progress:
        type: integer
    additionalProperties: false

  UnsealRequest:
    type: object
    properties:
      key:
        type: string
    additionalProperties: false

  Secret:
    type: object
    properties:
      author:
        type: string
      created:
        type: string
      description:
        type: string
      labels:
        type: array
        items:
          type: string
      value:
        type: string
    additionalProperties: false

  Duration:
    type: object
    properties:
      duration:
        type: string
    additionalProperties: false

  Backend:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      driver:
        type: string
      initialized:
        type: boolean
      sealed:
        type: boolean
    additionalProperties: false

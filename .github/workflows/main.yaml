name: Main
on: [ pull_request ]
jobs:
  build-image:
    permissions:
      contents: read
      id-token: write    
    runs-on: self-hosted
    env:
      BRANCH: ${{ github.head_ref }}
      AWS_DEFAULT_REGION: "us-west-2"
      ALGOLIA_PRIVATE_KEY: ${{ secrets.AGOLIA_PRIVATE_KEY }}   
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true   
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Login to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Set vars
      run: |
        if [ "$BRANCH" = "main" ]; then 
          BUCKET=preview
          HOSTNAME=dev-docs.d2iq.com
        elif [ "$BRANCH" = "beta" ]; then
          BUCKET=staging
          HOSTNAME=""
        else
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          BUCKET="pr-${PR_NUMBER}"
          HOSTNAME="docs-d2iq-com-pr-${PR_NUMBER}.s3-website-us-west-2.amazonaws.com"
        fi
        export BUCKET="pr-${PR_NUMBER}"
        echo "::set-env name=BUCKET::$BUCKET"
        # echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        # echo "BUCKET=$BUCKET" >> $GITHUB_ENV
        # echo "HOSTNAME=$HOSTNAME" >> $GITHUB_ENV
    - name: Pull image
      run: docker pull mesosphere/docs:latest
    - name: Build image
      run: |
        cp docker/Dockerfile.production.dockerignore .dockerignore
        docker build --cache-from mesosphere/docs:latest -f docker/Dockerfile.production -t mesosphere/docs:latest .
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::977260619897:role/dcos-docs-site
        aws-region: us-west-2
    - name: Build & Deploy Preview Docs
      run: |
        if [ "$BRANCH" != "beta" ]; then
          echo "$PWD/pages":/src/pages
          echo $ALGOLIA_PRIVATE_KEY
          echo $AWS_ACCESS_KEY_ID
          echo $AWS_DEFAULT_REGION
          echo $AWS_SECRET_ACCESS_KEY
          echo $AWS_SESSION_TOKEN
          echo ${{ env.BUCKET }}
          # echo ${{ env.HOSTNAME }}
          echo "arn:aws:iam::977260619897:role/dcos-docs-site"
          # docker run \
          #   -v "$PWD/pages":/src/pages \
          #   -e ALGOLIA_PRIVATE_KEY=$ALGOLIA_PRIVATE_KEY \
          #   -e "" \
          #   -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
          #   -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
          #   -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
          #   -e AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
          #   -e BUCKET=env.BUCKET \
          #   -e PRINCIPAL="arn:aws:iam::977260619897:role/dcos-docs-site" \
          #   -e REDIR_HOSTNAME=env.HOSTNAME \
          #   -e DOCS_ENV="preview" \
          #   mesosphere/docs /src/ci/deploy.sh          
        fi
      shell: bash
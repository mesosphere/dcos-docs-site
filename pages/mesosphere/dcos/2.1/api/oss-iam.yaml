swagger: '2.0'
info:
  version: 1.0.0
  title: 'Identity and Access Management API'
schemes:
  - http
  - https
basePath: '/acs/api/v1'
tags:
  - name: login
    description: Login- and authentication-related endpoints
  - name: oidc
    description: OpenID Connect endpoints, including provider management
  - name: users
    description: User management endpoints

paths:
  /auth/login:
    post:
      summary: Log in (obtain a DC/OS authentication token).
      description: >
        Exchange user credentials (regular user account: uid and password;
        service user account: uid and service login token) for a DC/OS
        authentication token. The resulting DC/OS authentication token is an RFC
        7519 JSON Web Token (JWT) of type RS256. It has a limited lifetime which
        depends on the IAM configuration (only, i.e. the lifetime cannot be
        chosen as part of the login HTTP request). The DC/OS authentication
        token can be verified out-of-band using a standards-compliant RS256 JWT
        verification procedure based on the long-lived public key material
        presented by the IAM's /auth/jwks endpoint, and by requiring the two
        claims `exp` and `uid` to be present.
      tags:
        - login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: LoginObject
          description: uid & password or uid & service login token.
          in: body
          required: true
          schema:
            $ref: "#/definitions/LoginObject"
      responses:
        200:
          description: >
            Login successful. The response body contains a JSON
            object providing the authentication token.
          schema:
            $ref: "#/definitions/AuthToken"
          headers:
            Set-Cookie:
              description: >
                A cookie containing the auth token (implementation detail for
                browser support, should not be of interest to general API
                consumers).
              type: string
        401:
          description: Login failed.

    get:
      summary: Log in using an external identity provider.
      description: >
        Log in using an external identity provider (via e.g. OpenID
        Connect), as specified via query parameter. This request initiates a
        single sign-on flow.
      tags:
        - login
      parameters:
        - name: oidc-provider
          description: OIDC provider ID
          in: query
          required: false
          type: string
      responses:
        200:
          description: Redirect to the identity provider.

  /auth/jwks:
    get:
      summary: Get the IAM's JSON Web Key Set (JWKS, according to RFCs 7517/7518).
      description: >
        This endpoint provides the IAM's JSON Web Key Set (JWKS), exposing
        public key details required for the process of DC/OS authentication token
        verification: the public key material can be used for verifying
        authentication tokens signed by the IAM's private key. The DC/OS
        authentication token is a JSON Web Token (JWT) of type
        RS256, and is required to have the two claims `exp` and `uid`. For
        interpretation of the data provided by the JWKS endpoint see
        https://tools.ietf.org/html/rfc7517 and
        https://tools.ietf.org/html/rfc7518.
      responses:
        200:
          description: The response body contains a JSON Web Key Set document.

  /auth/oidc/callback:
    get:
      summary: OpenID Connect callback URL.
      description: >
        After successfully logging in to an OpenID Connect identity provider,
        the end-user is being redirected back to the IAM via this callback
        URL. API consumers are not required to explicitly interact with this
        endpoint. This URL usually needs to be handed over to an OpenID
        Connect provider (often called "redirect" or "callback" URL).
      tags:
        - oidc
      responses:
        302:
          description: OIDC authentication flow successful.
        401:
          description: Problem in authentication flow.

  /auth/oidc/providers:
    get:
      summary: Get an overview for the configured OIDC providers.
      description: >
        Get an overview for the configured OIDC providers. The response
        contains a JSON object, with each key being an OIDC provider ID, and
        each value being the corresponding provider description string.
        This endpoint does not expose sensitive provider configuration details.
      tags:
        - oidc
      produces:
        - application/json
      responses:
        200:
          description: Success.

  /users:
    get:
      summary: Retrieve all regular user accounts or service user accounts.
      description: >
        Retrieve `User` objects. By default the list consists of regular user
        accounts, only. Alternatively, service user accounts may be requested
        instead.
      tags:
        - users
      parameters:
        - name: type
          in: query
          description: >
            If set to `service`, list only service user accounts. If unset,
            default to only listing regular user accounts.
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Success.
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                  $ref: "#/definitions/User"

  /users/{uid}:
    get:
      summary: Get single user object.
      description: Get specific `User` object.
      tags:
        - users
      produces:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The ID of the user object to retrieve.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/User"
    put:
      summary: Create user account.
      description: Create user (uid in url, details incl. credentials in body).
      tags:
        - users
      consumes:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The ID of the user account to create.
          type: string
        - name: User creation object
          description: Password/description.
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        201:
          description: User created.
        409:
          description: User already exists.
    patch:
      summary: Update user account.
      description: Update existing user account (meta data and/or password).
      tags:
        - users
      consumes:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The ID of the user account to modify.
          type: string
        - name: User update object
          description: Password/description.
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        204:
          description: Update applied.
        501:
          description: Not implemented for service user accounts.

    delete:
      summary: Delete account.
      description: Delete account.
      tags:
        - users
      parameters:
        - name: uid
          in: path
          required: true
          description: The ID of the user account to delete.
          type: string
      responses:
        204:
          description: Success.

definitions:
  LoginObject:
    type: object
    properties:
      uid:
        type: string
      password:
        type: string
      token:
        type: string

  AuthToken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
    additionalProperties: false

  User:
    type: object
    required:
      - uid
      - url
      - description
      - is_remote
      - provider_type
      - provider_id
    properties:
      uid:
        type: string
      url:
        type: string
      description:
        type: string
      is_remote:
        type: boolean
      is_service:
        type: boolean
      public_key:
        type: string
      provider_type:
        type: string
      provider_id:
        type: string
    additionalProperties: false

  UserCreate:
    type: object
    properties:
      description:
        type: string
      password:
        type: string
      public_key:
        type: string
      provider_type:
        type: string
      provider_id:
        type: string
      cluster_url:
        type: string
      creator_uid:
        type: string
    additionalProperties: false

  UserUpdate:
    type: object
    properties:
      description:
        type: string
      password:
        type: string
    additionalProperties: false

# Do NOT edit this file directly.
# File generated from charts/dispatch/values.yaml.tmpl by the update-gitops-repo tool with arguments: /usr/bin/update-gitops-repo -branch=master -create-pull-request=false '-commit-message='"'"'update mesosphere/dispatch image digest to master'"'"'' -substitute=chartVersion=master -substitute=dispatchImage=mesosphere/dispatch:master -substitute=dispatchTestImage=mesosphere/dispatch-helm-test:master -substitute=helmImage=mesosphere/dispatch-helm:master -substitute=kindImage=mesosphere/dispatch-kind:master -substitute=testutilsImage=mesosphere/dispatch-testutils:master -substitute=argocdImage=mesosphere/dispatch-argocd:master -compile-only -git-ignore -verbose

argo-cd:
  enabled: true
  installCRDs: false
  global:
    image:
      repository: mesosphere/argocd
      tag: v1.4.2-p2

  konvoyDex:
    enabled: false

  controller:
    extraArgs:
      kubectl-parallelism-limit: "10"
    metrics:
      enabled: false
      serviceMonitor:
        enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

  server:

    env:
      # Configure argocd-server with CA bundle so it can verify the TLS
      # certificate that dex provides when performing requests to
      # https://<cluster>/dex/*
      - name: SSL_CERT_FILE
        value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        # Set `traefik.ingress.kubernetes.io/auth-type: ""` to disable traefik-forward-auth.
        traefik.ingress.kubernetes.io/auth-type: "forward"
        traefik.ingress.kubernetes.io/auth-response-headers: "X-Forwarded-User"
        traefik.ingress.kubernetes.io/auth-url: "http://traefik-forward-auth-kubeaddons.kubeaddons.svc.cluster.local:4181/"
        traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
      hosts: [""]
      paths:
        - "/dispatch/argo-cd"
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 75
      targetMemoryUtilizationPercentage: 75

    rbacConfig:
      policy.default: "role:admin"
    config:
      users.anonymous.enabled: "true"
      url: "/dispatch/argo-cd"
      resource.exclusions: |
        - apiGroups:
            - "*"
          kinds:
            - "Pipeline"
            - "PipelineRun"
            - "TaskRun"

    extraArgs:
      basehref: "/dispatch/argo-cd"
      insecure: "true"

    metrics:
      enabled: false
      serviceMonitor:
        enabled: true

    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

  repoServer:
    metrics:
      enabled: false
      serviceMonitor:
        enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 75
      targetMemoryUtilizationPercentage: 75

  dex:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

argocdWebhookIngress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/request-modifier: "ReplacePathRegex: ^(.*) /api/webhook"
  hosts:
    - paths: [/dispatch/hook/argo-cd]
      host: ""

serviceAccount: build-bot

dispatch:
  pullPolicy: Always
  image: "mesosphere/dispatch:master"
  testImage: "mesosphere/dispatch-helm-test:master"
  syncPeriod: "5m"
  watchNamespaces: []
  garbageCollectAge: "48h"

controller:
  images:
    gsutil: google/cloud-sdk:255.0.0-alpine
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

eventSink:
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi
  defaultStepResources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi

global:
  prometheus:
    enabled: false
    # Service monitor selector used by prometheus operator
    release: prometheus-kubeaddons
  grafana:
    enabled: false
    # Namespace that grafana watches for dashboard configmaps.
    namespace: kubeaddons

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
  hosts:
    - paths: [/dispatch/hook]
      host: ""

tekton-dashboard:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/auth-response-headers: "X-Forwarded-User"
      traefik.ingress.kubernetes.io/auth-type: "forward"
      traefik.ingress.kubernetes.io/auth-url: "http://traefik-forward-auth-kubeaddons.kubeaddons.svc.cluster.local:4181/"
      traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
    hosts:
      - paths: [/dispatch/tekton]
        host: ""

minio:
  accessKey: abcd
  secretKey: defghijk
  service:
    name: s3-us-east-1
    port: 80
  defaultBucket:
    enabled: true
    name: artifacts
  # TODO: cache expiry, etc so we don't fill this up. But increase the default size to 100Gi to delay the inevitable.
  persistence:
    size: 100Gi

# vi:syntax=yaml

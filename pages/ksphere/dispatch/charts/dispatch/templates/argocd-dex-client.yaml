{{- $fullName := include "dispatch.fullname" . -}}
{{ $releaseNamespace := .Release.Namespace }}
{{- if (index .Values "argo-cd").konvoyDex.enabled }}
apiVersion: dex.mesosphere.io/v1alpha1
kind: Client
metadata:
  name: {{ $fullName }}-argocd-dex-client
  namespace: kubeaddons
spec:
  displayName: Konvoy SSO
  clientSecretRef:
    name: {{ $fullName }}-argocd-dex-client-secret
  redirectURIs:
    - /dispatch/argo-cd/auth/callback
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $fullName }}-setup-argocd-oidc
spec:
  template:
    spec:
      serviceAccountName: {{ $releaseNamespace }}-setup-argocd-oidc
      containers:
      - name: setup-argocd-oidc
        image: {{ .Values.dispatch.image }}
        imagePullPolicy: {{ .Values.dispatch.pullPolicy }}
        args:
        - component
        - setup-argocd-oidc
        - --namespace={{ $releaseNamespace }}
        - --client-id=dex-controller-{{ $fullName }}-argocd-dex-client
        - --ingress=dispatch
        - --secret={{ $fullName }}-argocd-dex-client-secret
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $releaseNamespace }}-setup-argocd-oidc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $releaseNamespace }}-setup-argocd-oidc
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - get
  - list
  - update
  - patch
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $releaseNamespace }}-setup-argocd-oidc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $releaseNamespace }}-setup-argocd-oidc
subjects:
- kind: ServiceAccount
  name: {{ $releaseNamespace }}-setup-argocd-oidc
  namespace: {{ $releaseNamespace }}
{{- end }}

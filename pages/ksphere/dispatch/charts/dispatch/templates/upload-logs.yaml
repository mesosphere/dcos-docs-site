apiVersion: v1
kind: ServiceAccount
metadata:
  name: dispatch-upload-logs
  labels:
    dispatch.d2iq.io/catalog: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dispatch-upload-logs
  labels:
    dispatch.d2iq.io/catalog: "true"
rules:
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - pipelines
  - taskruns
  - tasks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dispatch-upload-logs
  labels:
    dispatch.d2iq.io/catalog: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dispatch-upload-logs
subjects:
- kind: ServiceAccount
  name: dispatch-upload-logs
---
# Monitor the pipeline run and upload the logs
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: upload-logs
  labels:
    dispatch.d2iq.io/catalog: "true"
spec:
  steps:
  - name: collect-logs
    image: "{{ .Values.dispatch.image }}"
    imagePullPolicy: {{ .Values.dispatch.pullPolicy }}
    env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: PIPELINE_RUN
        valueFrom:
          fieldRef:
            fieldPath: metadata.labels['tekton.dev/pipelineRun']
    command:
    - /ko-app/dispatch
    args:
      - component
      - upload-logs
      - $(PIPELINE_RUN)
      - --dest-dir=/logs
      - --namespace=$(NAMESPACE)
    volumeMounts:
    - name: collect-upload-logs
      mountPath: /logs
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  - name: upload-logs
    image: {{ .Values.controller.images.gsutil }}
    imagePullPolicy: {{ .Values.dispatch.pullPolicy }}
    command:
      - gsutil
    args:
      - -m # option to parallelize copies
      - rsync
      - -r # recursive copy
      - /logs
      - s3://artifacts/{{ .Release.Namespace }}/
    env:
    - name: BOTO_CONFIG
      value: /var/secret/s3-config/boto
    volumeMounts:
    - name: volume-bucket-s3-config
      mountPath: /var/secret/s3-config
    - name: collect-upload-logs
      mountPath: /logs
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  volumes:
  - name: volume-bucket-s3-config
    secret:
      defaultMode: 420
      secretName: s3-config
  - name: collect-upload-logs
    emptyDir: {}
